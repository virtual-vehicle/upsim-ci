name: No_1_RequirementsPhase_DefineParameterRequirements
on:
  workflow_call:
    outputs:
      summary:
        value: ${{jobs.No_1_RequirementsPhase_DefineParameterRequirements.outputs.summary}}
    secrets:
      WRITE_WORKFLOW:
        required: true
jobs:
  No_1_RequirementsPhase_DefineParameterRequirements:
    runs-on: ubuntu-20.04
    outputs:
      summary: ${{steps.outputStep.outputs.summary}}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.WRITE_WORKFLOW }}
      - name: Install compatible node version
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install CDK modules
        working-directory: Credibility-Assessment-Framework/Credibility-Development-Kit
        run: find . -maxdepth 4 -name package.json -exec sh -c 'for file do dir=${file%/*}; npm install --prefix $dir $dir; done' sh {} +
      - name: set STMD Folder path
        run: echo 'STMDFOLDERPATH=/home/runner/work/upsim-ci/upsim-ci/data/dc-motor/extra/net.pmsf.ssp.stmd' >> $GITHUB_ENV && echo $STMDFOLDERPATH
      - name: install CDK module
        run: npm install --prefix ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1 ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1
      - name: req_parameter_01_single_semantic
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1", "checkSingleSemantic", ["file","file"], ["./documents/requirements/credibility/level_1/expertStatement_req_parameter_01.json","./documents/keystore/public.pem"], {"level":"1","id":"req_parameter_01_single_semantic"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_02_single_semantic
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1", "checkSingleSemantic", ["file","file"], ["./documents/requirements/credibility/level_1/expertStatement_req_parameter_02.json","./documents/keystore/public.pem"], {"level":"1","id":"req_parameter_02_single_semantic"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_03_single_semantic
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1", "checkSingleSemantic", ["file","file"], ["./documents/requirements/credibility/level_1/expertStatement_req_parameter_03.json","./documents/keystore/public.pem"], {"level":"1","id":"req_parameter_03_single_semantic"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_collection_semantic
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_1", "checkCollectionSemantic", ["file","file"], ["./documents/requirements/credibility/level_1/expertStatement_req_parameter_collection.json","./documents/keystore/public.pem"], {"level":"1","id":"req_parameter_collection_semantic"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: install CDK module
        run: npm install --prefix ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2 ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2
      - name: req_parameter_01_linkage_syntax
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSyntax", ["file","inline","file"], ["./documents/requirements/credibility/level_2/graph_req_parameter_01.json","#req_parameter_01","./SimulationTask.stmd"], {"level":"2","id":"req_parameter_01_linkage_syntax"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_02_linkage_syntax
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSyntax", ["file","inline","file"], ["./documents/requirements/credibility/level_2/graph_req_parameter_02.json","#req_parameter_02","./SimulationTask.stmd"], {"level":"2","id":"req_parameter_02_linkage_syntax"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_03_linkage_syntax
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSyntax", ["file","inline","file"], ["./documents/requirements/credibility/level_2/graph_req_parameter_03.json","#req_parameter_03","./SimulationTask.stmd"], {"level":"2","id":"req_parameter_03_linkage_syntax"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_01_linkage_semantics
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSemantics", ["file","file"], ["./documents/requirements/credibility/level_2/expertStatement_req_linkage_parameter_01.json","./documents/keystore/public.pem"], {"level":"2","id":"req_parameter_01_linkage_semantics"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_02_linkage_semantics
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSemantics", ["file","file"], ["./documents/requirements/credibility/level_2/expertStatement_req_linkage_parameter_02.json","./documents/keystore/public.pem"], {"level":"2","id":"req_parameter_02_linkage_semantics"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: req_parameter_03_linkage_semantics
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_2", "checkLinkageSemantics", ["file","file"], ["./documents/requirements/credibility/level_2/expertStatement_req_linkage_parameter_03.json","./documents/keystore/public.pem"], {"level":"2","id":"req_parameter_03_linkage_semantics"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: install CDK module
        run: npm install --prefix ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_3 ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_3
      - name: requirement_model_format
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/requirements/level_3", "checkRequirementCollectionFormat", ["file","inline"], ["./documents/requirements/reqif/dc_motor.reqif","['ID', 'Description', 'Type', 'State']"], {"level":"3","id":"requirement_model_format"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: show report
        run: cat No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json
      - name: send to outputs
        id: outputStep
        run: echo "summary=$(cat
          No.1.RequirementsPhase.DefineParameterRequirements.cdkResult.json)" >>
          $GITHUB_OUTPUT
