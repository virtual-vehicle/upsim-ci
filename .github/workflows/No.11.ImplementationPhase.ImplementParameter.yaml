name: No_11_ImplementationPhase_ImplementParameter
on:
  workflow_call:
    outputs:
      summary:
        value: ${{jobs.No_11_ImplementationPhase_ImplementParameter.outputs.summary}}
    secrets:
      WRITE_WORKFLOW:
        required: true
jobs:
  No_11_ImplementationPhase_ImplementParameter:
    runs-on: ubuntu-20.04
    outputs:
      summary: ${{steps.outputStep.outputs.summary}}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.WRITE_WORKFLOW }}
      - name: Install compatible node version
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install CDK modules
        working-directory: Credibility-Assessment-Framework/Credibility-Development-Kit
        run: find . -maxdepth 4 -name package.json -exec sh -c 'for file do dir=${file%/*}; npm install --prefix $dir $dir; done' sh {} +
      - name: set STMD Folder path
        run: echo 'STMDFOLDERPATH=/home/runner/work/upsim-ci/upsim-ci/data/dc-motor/extra/net.pmsf.ssp.stmd' >> $GITHUB_ENV && echo $STMDFOLDERPATH
      - name: install CDK module
        run: npm install --prefix ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/implementation/level_1 ./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/implementation/level_1
      - name: implementation_expert_parameter_check_battery
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/implementation/level_1", "checkExpertReview", ["file","file"], ["./documents/implementation/credibility/level_1/expert_check_parameters_battery.json","./documents/keystore/public.pem"], {"level":"1","id":"implementation_expert_parameter_check_battery"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.11.ImplementationPhase.ImplementParameter.cdkResult.json
      - name: implementation_expert_parameter_check_electrics
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/implementation/level_1", "checkExpertReview", ["file","file"], ["./documents/implementation/credibility/level_1/expert_check_parameters_electrics.json","./documents/keystore/public.pem"], {"level":"1","id":"implementation_expert_parameter_check_electrics"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.11.ImplementationPhase.ImplementParameter.cdkResult.json
      - name: implementation_expert_parameter_check_mechanics
        run: rs=$(node -e 'process.stdout.write(JSON.stringify(require("./util/wrapper/fcnWrapper.js").wrapper("./Credibility-Assessment-Framework/Credibility-Development-Kit/metrics/implementation/level_1", "checkExpertReview", ["file","file"], ["./documents/implementation/credibility/level_1/expert_check_parameters_mechanics.json","./documents/keystore/public.pem"], {"level":"1","id":"implementation_expert_parameter_check_mechanics"})))') && echo $rs &&  node ./util/stmd/results.js -p "$rs" -o No.11.ImplementationPhase.ImplementParameter.cdkResult.json
      - name: show report
        run: cat No.11.ImplementationPhase.ImplementParameter.cdkResult.json
      - name: send to outputs
        id: outputStep
        run: echo "summary=$(cat
          No.11.ImplementationPhase.ImplementParameter.cdkResult.json)" >>
          $GITHUB_OUTPUT
